#Pok√©dex 2 proto
#4/10/23
#Rhubarb
                                                        
#                                                                     .*.,//,,*                                                                /&/*#,                                                    
#                                                                  .*,,,,,*,***                                                              ./**/((/*//#/                                               
#                                                                 (,/********(.   .*..*,./                                    ,/(,/#.        .((******,(##,                                              
#                                                               ***/,,,,,,,/(. ......   //                                 ,*.....*//*/.     *(*.,,,,***#(#                                              
#                                                 *.*(*/#     .(,(......../( ...,      /,                                  .(* .     */,(    *(*.........(/,   ((**///**(.                               
#                                               */**,..((*   ,//(******,,//,..,      ./                                    .(*(.       ***,  /(/,,,,.... ///  *((,,,,,*%(/                               
#                                              ,/#/,*,,(/(  ,*//,**/***,//.,, .   . /*                                       (*(,       .(./ /(/,,,,,,,,,*(( ./(*,,,,,,##,                               
#                                             ,/(/.....,((..*/*,,,,,,,,*/*/......../.                                         /*(. ....   *,*(((,,,,,,,,,,((**(/....,,*##.                               
#                                    ,..,     *(/ .....,(//,(*...,,,,,.#%..,,,,*,**           .. /(*#            . .           //#..,,.... ***((..,,.,....(/*/(,..... /#/                                
#                                  ****/(/(,  (#/.,,,,,,//,//........./#,*******(,           .*,.  **,         .**(//.  .      .#(#,,,,,,,. ,(/(..........***(/,,,,,..((,      .,,..,..                  
#                                 *,/,,,,//(,.#(,,,,,,,,,/*/. .... . ,(********(,          , ,**   ,*/,//   */ */, /, *#,#      *##(,***,**, ,*/,.....(**#(*//,,,,,,,,//      %/((,,,(*(/                
#                                ,//,,,,,,///((/.,,,,,,..***        .(*******/(.          .*//,*   ./,./*.  */(/*.     .(/       ((#********. ,%, .. (/    /%,..,,...,/*    (*//.,,,,,*(//               
#                                *//,,,,,. (////........ ,%(*,*#, . //******/(.           ,*, (/    (. ,*.  /* #*      ,(*       .#(#********, ** . *(      #*...... */,  //*#.....,,,,(/                
#                                /(*,,......((/* ....    .(.  . /. */******/(,            ,/, .*    ,. **. ,/,         *(,        ((#/********..,. ,#..    .#,..... ./( */*(*,,.....,,(*                 
#                                (/,.....,,,,(*/         ./     ,*.(*******(/             ,/,       .. */, */,        .//         .#((***//***,....#*,,... *( .     ,(*(.(,,,,,,,....(,                  
#                         ,,..,  */*..,,,,,,,.#(       . .*      /#*******(#,*.           */, .      . */* /*.      . ,(/          (#(*/*******,..((,***..,#. ..    */,/*,,,,,,,,,.,/.                   
#                       ,/*(*(/,/((#,,**,,,,..,(       . ,*    . ,#******/( ,*,,          */*          ,/*./*       . *(*          ((#*//****/*,.*#*****..#, ... ,/(*,(,........../,     /(*/*/#         
#                       ,(/,,,,*(//(*,,,,,,,.../, .,,. . .(.   ..,((*****(,  .*.*         */* .      . ,/**/,       . /(,          /##/*********,(/*****.(* ..//,.  . (/ ...... .*.  .***//*,,#/#        
#                       */*,,,,...(/(.,,,..... ./,.  ,(.  /* ...,**(/***/(.    *.*        ,//.         ./*//.        .(/           *(#/*********//******#, (#, .   . *#. ... . *,  #(*%*..,*,,*#(*       
#                       /((,,....,,/%/......... .(,  . */ ,(,...****/***//      *,*        //,         ././/       . ,(*          ,*(#*****************(((*.....  ,/*. .     ,*./(/((*,....,*,##.        
#                       ,#(/...,,,,,*%,...  .    ./   ...(,//...,*******(*       *.*       ***         .*,(/ .     . */.        *.,,*(********,******/%/,,,... .(/  ...    ./,#*(#,**,*,....*%,          
#                        ,(/(.,,,,,,,*(....     . ** ..,,,/%#,,,,,******(,        *,*      ,/* .        */#* .... . ./*       ,,,*  /*,,*,*,,,,****(/***,,,.,//, ......  .//**/,.,,*****,.*((/           
#                          #/%*,,,,,,,*(...     .. /*..,****#/.,,,,,,,,,(,         ,.*,,*,*,/*.   ..... *//. ...... ,* .,   ,*,* . .(,,,,,,,,,,,********,*#(...     ..  /..(, ...,,***,,//*#.            
#                           (/(*,,,,,..*/       . . /*..*****/*,,,,,,,,.// .      . ,,,*.*,,*/. ....... **/.........,*#(. .*.*.  . //,,,,,,,,,,*******/(/,,**//***,.,,,,**. .....,,,,,,*((,              
#                            *(*/...... ,/ ...    .. //.********,,,,,,,,*(    .....  **,. .*//, ....... *** ...... /,.(/ *,*.   . ,(,,,,,,,,,,,****(%#(/*,,,,....  . //     ....,,,*,*%*    ,,.,.        
#                              /,/,..... ,/.   ...... /(.,*******,,,,,,,,#,    .......**,  .*** ........*/*....../,  *(*,,*  ... .(,,,,,,,,,,,,,************,....  .*(,    .......,((,,/////(/***(.      
#              //*(((##(/***..  ,/,( ..    ,.     .... ,#,,*******,,,,,,,*&* ......... ##  . (( ........*%,.....(.  ./*,*. .... .(*,,,,,,,,,,,,***********,..  ./#/. ..    .... *(***/((*...,,,,(((      
#             **/,,,,....,********/*,*.     .. .**///*,. /(,*******,,,,,,,(**, .........(* ...(,........*#...*#/... /*,*........(,.,,,,,,,,,,,,********,.,*///*. .....      ./#*,/*,,,,*,...,*,,#(,      
#             /*#*,,,...,,,,,,....,*/,*(      .,........*/*(/.******,,,,,,*%,,(..........(. . ,/........*/..*//....,/*, .......(..........,,,,,***,,****.  .*/(, ...     ,((,....,,,,,,,,...,*%%.        
#              *(*(/,...,,,,,,,.........**.    *#*....,,,,,,,,,,,,,,,,,,,,.*#,.//........,/....*,.......,,.,(......##......../* .. .........,,,***///////****,.(,   .....  ....,,,,,,**,..*((,           
#                 ((,/(*,,,,,,.........       ..  ,(#(*,,*******,,,,,,,.,,,,/#.../(.......*/...,*.......,,./*.....//.......*(.      ......,,,,,,,,***********,*#.         ....,,,,,,,,/%#*               
#                    ,//(///*,......          ... ,////(%%#/******,,,,,,,..**(#,.../(......**.../,.........(,....**......*/.        .....,*,,,,,****///(((((/*,...      ......,,,*((/,                   
#                         ,((*/((,.            . .,...,*************,,,,,,*////#,..../(.....**..**........,/....,,.....,(.         ......,,,,,,,,,*//(((/**,. .. .      ..  ./#(*.                       
#                             .,******,,.      . ,*.,,,**************,,,,*//////#,.....*/..,*/(//********,,,.........,*.        .....,,,,,,,,***********,../(       ..,*(#/**((/(((//((((///*            
#                        .,*/////**,*((*,.     .. *(//(((##((((/*****,,,,////////#/....,((,. ..      ......./(*....**         ......,,,**((/***********,,##.   ......      ....,,,.....,,,./((           
#                ,///******/**,...             ....  .**//(/*********,,,*/////////(%#(*.......     ........,***/(#/,.    ..........,,*******/(###(******,...  .   .......,,,,,,,,,....,,,,/%*            
#               .*/*,,,....,,,....                . .(..,,,*******(*,,,,*/////////////,,......    .........*/////*****, ........,,,,/#(**********,,*/......       ......,,,,,,,,.....,,,,%(              
#               .//*,,,.....,,........,*//*,..       .(/.,,,*((##,,,,,,,*((///////////,,......... .......,**//////******,.,,,,,********(%#((((/*,,//.  ....,,,,,,,,,,,,,******/*///((#((*                
#                /*(*,,,.....,,**/(//(*             .. ./(*. */,,,,,,,,/#///////////*,,...,......  .....,**//////////**//,,,,%#/*********,*((. ,*, .          .,***/(*/(*/*,..                           
#                 *(//**///(//////,......            ..,,.. /(,,,,,,*(&/,*/*////****,,,,,,,,,,*.     ....*////////////((/*****//**(((/**,,*(/ .....      ........,,,,,**///*////*,*.                     
#                    .*,/(,/#*..,,,,..........  .*((,      .. *#(/#*./,,,,,**(#,**,,,,,,,,,,**      ......//////////////##******,*(, .*(%#, .  ...    .. ......,********,...,***,((.                     
#          .********,,..,(*,,....,,,,.....,/((*,.          .....   ,/,,,,,*/,,(,,,,,,,,,,,,/* .     .....,,((*///////////##/(*,,,*/#/ ......      ...,****,.....,,,**,....,*****#*                       
#          ,/*..,,**//**/*(,,,......,/#(%%,  ..         .,. .. ... .(#*,/(. ..#,.,,,,,,,,.*/..............,*#*.,,,,,,..,,*#, .(#/,       ..  .,.  .  .... .*%#**(((#/,.,****/#%(/(##/((***,.             
#          .*,,...       ///(*,*///,*((*,,,,....   .,*,..  .,,..  ... ...,.... .,*..,,,. ./,.....,,,,,,,,,**// ..      ...(, ..... .. ...........,,,....,,,,,,,**((**/(((#(*,,,*,,,.....,****//          
#                          */,, //*#....,,,,,,.../(,...  ,,  .     ,/***/*. .... ,/    */.(,,,,**, *,,,,,***// . ... .....(,.. ..... .*. ...,,,,,,,,/&%/,,,,,,....,*/#/(      .,,***,,******. .          
#                 ...,,,,****/***(*,,......,,/(/...,,,,,......  ,*/, .... ./. ,, .* ... ,/(/,,,*, ..*,,*****/, ...........(. .,........./#/,.,,,,,,,,,.,/#((*...****(%/(*.              ..               
#         .*///***//**,..      ...//,,,,...#&*,,... *#.....,.,/,.,/. . ,,. (/,.. **  *, ./,(**//  ...******// .......... */ .. ,/ ..,,,,,./*/#*,*,.....,*,,(,.(%#/#(...*/((/*//,                         
#         .//#*            .........*((*/#(**//,,,/##,,,..,**.*,....,/,,,. /, .. **......*.,(*(, .....****// ........,,..(.......(/.,,,,,...(/./(/,.,,,,,*##*/*,.............,*/((//*,,.                 
#       ,#,((          ..   .,*/((/(**/(/,.,*/,,/, .*#%%(*.,/( .. ,*. ** . *, .. *,...../... /%........*/(, .. ....... /(.(,,,,,,.*&*.,,,,***,/*.../%%%%*.....  *%(/,............  .*((/*//,             
#       *(*        ..,*////*,..   ******,..  .  ..,**/*/*,,..,**,,*,.../...,*... ** .. ** ....(.......,./, .............#,.*/,.,,,*(,/#(((##(((,........,**,..    .,******,...........  .,,,,,,.         
#      //*(   .*/((*.          */.*/  .    .*(((*. .............,/.... *, ..*... ,/ .. /,....,/,,/*.,,*// . ............*&/..*(##(/*#(......//,............. ,/#/((,   .*//,*//*.  ... . .... .,(        
#      *//**,..                ,,,...,/#(*,.  .............,*/*,,(, ..../.. ** .. /, ../.....//,,,/****#,....         ...,(**,...*, /,,//,.....,//*...............,,,,,,.    .,**///**,..  ./(/,         
#                             ./*.*(/. ................,/(*..,/*.*/ ... ,* ../. . ,/ ../,.../,.,*,*#/*((.....         .... */ *// . ,*....*(*..*/*,*#/. ............  ,*,,*/.       ,/(/**/,             
#                         ******,.  .  ............*/*,..*#*. ..**(, ....*, ../, . *,  *(*,...,,**//#/(/ ..,/*.        .*/(,/* .#. .,/(*.....(*,(. .. /#//,.......  .... .,**,**                         
#                     .(/,((.              .  ,/(*.....//...*/ . ,(/......*, . *, ../. .* . .,,***////%%#/,.,*,(.   ..(**,/(/,.#,.,,.,(/...,#,,.#(..,,**/(,,((. ...... . .. **.                          
#                   /(*/*.               .*(*,...*(//#/*,..../(**,,,(......,, . ,*. .*.  . .(###(*/((//(/,..../,/(.. /#*,,,(#. ,%,.,,,#/*.,(,.,,**/(#%#/,,**,***//*.  ... .. .*/,                        
#                   ((*##         .  ./(*#* . ,*. .(*.,.,*(/../%* ...(* ...../. . **     . /%((//,...(/((*.....,( ,(#/(&/...*#  ,%,,,*#, .#,***#*  .. ,(*,/.    ./(**(/.   *#/                           
#                    ,/,        ,*/**.,/.   *. ....,.......,#/  *, .,,/%*......,.   .......(###(/*.,.//(//......./* .(*.*#, ../* (,,,*#.,*,**##..........*/***      .,**(/.                              
#                      .   .,//,   ,,*.,**//#*,.. .,,,*(* ..,*(* *...,/#*(#*  .. ......,,,*#/. .(/**/(,/***.......*/  ,(..(* ...(#...,#(.,,*%. ,(*     .... //.(*                                        
#                     ,*,,.       ,,.**,/*.  ...... .,*,,(*,,**/*.,,,,/,**#(/((/,,.,,,,**%#///.,#((#/ (,./........,(.  */./* ..**.,,,,,,,,#* ,,*//**/(/*/. . .*,,*.                                     
#                                  .(.*/  . .///*********,,,,.,,,,,,,,,,,/*.//*    ,(/**/#.*//((*%(%/.*/. /*.........(, . /,*/ .,.,,,,,,,,,,,...,...,%/ . ,/ ... ,/./                                    
#                               .***/,    ..,..,(,.............,,,,,,,,.(*,/,/    ....*#%#/%#//*#%(,,/*....(..........(* . .*#*...,,,****,,*///*/*****//**,,, .. . *,,.                                  
#                             .(.//       ** . */ .*((/*,////,..,.,,,,,.*%*./.  ......,,.,,****,,#/*((.... */ ........ /*    /*..,******/#..//*(((//,     ,/./(,     ...                                 
#                           .*,/,       . */..,*,.   *,**.....,*(*,.,,,,,*(/, .......,**,,,,,,*,/(//*** ... (* ........ **  *,..,,,****#* ....**,*.          ,//((***,.                                  
#                           ,/.(.     . ./,        *,,/ ......... *&(,,,,,(/ .......,,,,.../#%*,(#( .*/. .. ,#. ........ ***....,,*//(/ ....... ,/./.                                                    
#                            ,(,      ,/.        ,,,,  ..........//*/((,,//........,,...*##((%(,//,  ***     ## .. ..... */ . ..//,(*/*.......... .*,*,                                                  
#                             . ..  ,(         **,/    ....... */*,*,..##............ *%/////#&****  .**,  . *&/ ... . . ,/,**/((.   //,(, ..... ... /,**                                                
#                                .*,         ,*,*     ...... ,/.**/...**............*/*,**/#%#%(,***  **/. . ,*(, .   .. *,  .*.       ,/***. .     . .*,,,                                              
#                                           /,(. . .  .. .. (,,*** .,/ ...........*/.,**/%%#%#%#.*/*   /,/#, .(*(.     . /* .(*           */.(, .        *.,.                                            
#                                         ./**        ... ** **/.  ,*   .......,**.,,*/%%###%%%,,*.     ,*/,/*,(/(.       .*/*/             .*,,*. . . .  .,,                                            
#                                         .(,*       .. ,/  /*/ . */ .   ...../#...,*#%#%%%#%( *,          ,,   (*/ .        ***               ,/.**  .  .*.                                             
#                                         ./(.        ,*.  /// . ,(     ....,*** ..,%%##%##%*./.                .(*/ .   .   ,**                  ,*,*,,/**                                              
#                                         ,(/ ..  . ./   ./** .. /, . .. ..* ,**  .#%#%#%%&/*/                   .(*/ .      .**,                     ,(,,                                               
#                                         /(/.. . .,.   .//* . . ** .  ..,*   ,,,*#((####%(*/.                    ./*/ .      ,**                                                                        
#                                           ,,(  ,,     //* .   . ./. ..**      *(******/(*/                       ./,/       .**.                                                                       
#                                            /**.      */* .      .*,,*,.       */*,,,,*(**                          /,/. .  . **,                                                                       
#                                                     ./#((    . ,*             */,...,,*,                            /,/*,  . ,*,                                                                       
#                                                     ,*,(* .  .*.              */***/..                               ,(/*/*  ,*,                                                                       
#                                                       //* . *.                  .,.                                     .(.(,,(.                                                                       
#                                                       ,*/.,.                                                              .**                                                                                        

#importer les truc utiles
import time
import random
generation=1

def inputpokemon():
    pokemon=input('Pok√©mon? ')
    return pokemon

#Changer g√©n√©ration
def gen():
    gen=int(input('G√©n√©ration? '))
    
    if gen == 1:
        print()
        print('G√©n√©ration choisie: Premi√®re g√©n√©ration')
        print('Jeux concern√©s:')
        print()
        print('- Pok√©mon Rouge (1996) ¬©GameFreak')
        print('- Pok√©mon Bleu (1996) ¬©GameFreak')
        print('- Pok√©mon Jaune (1998) ¬©GameFreak')
        print()
        gen=1

    elif gen == 2:
        print()
        print('G√©n√©ration choisie: Deuxi√®me g√©n√©ration')
        print('Jeux concern√©s:')
        print()
        print('- Pok√©mon Or (1999) ¬©GameFreak')
        print('- Pok√©mon Argent (1999) ¬©GameFreak')
        print('- Pok√©mon Cristal (2000) ¬©GameFreak')
        print()
        gen=2
        
    elif gen != 1 and gen != 2:
        print()
        print('G√©n√©ration non reconnue!')
        print("La premi√®re g√©n√©ration √† √©t√© s√©lecitonn√©e afin d'√©viter tout probl√®mes dans le programme")
        print()
        gen=1
    
    global generation
    generation=gen
        
#classes
class Pokemon:
    def __init__(self,num,rawnom,nom,pv,force,defense,vitesse,specialgen1,attaquespeciale,defensespeciale,pre_evolution,evolution,evolution2,pre_evolution2,niveau_evolution,niveau_evolution2,condition_evolution,condition_evolution2,zonegen1rouge,zonegen1bleu,zonegen1jaune,zonegen2or,zonegen2argent,zonegen2cristal,type1,type2,pasoeuf,male,femelle,taux_capture,faiblesses,dbfaiblesses,resistances,dbresistances,immunites):
        self.num=num
        self.rawnom=rawnom
        self.nom=nom
        self.pv=pv
        self.force=force
        self.defense=defense
        self.vitesse=vitesse
        self.specialgen1=specialgen1
        self.attaquespeciale=attaquespeciale
        self.defensespeciale=defensespeciale
        self.pre_evolution=pre_evolution
        self.evolution=evolution
        self.evolution2=evolution2
        self.pre_evolution2=pre_evolution2
        self.niveau_evolution=niveau_evolution
        self.niveau_evolution2=niveau_evolution2
        self.condition_evolution=condition_evolution
        self.condition_evolution2=condition_evolution2
        self.zonegen1bleu=zonegen1bleu
        self.zonegen1rouge=zonegen1rouge
        self.zonegen1jaune=zonegen1jaune
        self.zonegen2or=zonegen2or
        self.zonegen2argent=zonegen2argent
        self.zonegen2cristal=zonegen2cristal
        self.type1=type1
        self.type2=type2
        self.pasoeuf=pasoeuf
        self.male=male
        self.femelle=femelle
        self.taux_capture=taux_capture
        self.faiblesses=faiblesses
        self.dbfaiblesses=dbfaiblesses
        self.resistances=resistances
        self.dbresistances=dbresistances
        self.immunites=immunites
        
    def info(self):
        
        listezonegen1bleu=''
        listezonegen1rouge=''
        listezonegen1jaune=''
        listezonegen2or=''
        listezonegen2argent=''
        listezonegen2cristal=''
        listeevolution=''
        
        for i in range(len(self.zonegen1bleu)):
            if i > 0:
                listezonegen1bleu += ', '
            listezonegen1bleu += self.zonegen1bleu[i]
            
        for i in range(len(self.zonegen1rouge)):
            if i > 0:
                listezonegen1rouge += ', '
            listezonegen1rouge += self.zonegen1rouge[i]
            
        for i in range(len(self.zonegen1jaune)):
            if i > 0:
                listezonegen1jaune += ', '
            listezonegen1jaune += self.zonegen1jaune[i]
            
        for i in range(len(self.zonegen2or)):
            if i > 0:
                listezonegen2or += ', '
            listezonegen2or += self.zonegen2or[i]
            
        for i in range(len(self.zonegen2argent)):
            if i > 0:
                listezonegen2argent += ', '
            listezonegen2argent += self.zonegen2argent[i]
            
        for i in range(len(self.zonegen2cristal)):
            if i > 0:
                listezonegen2cristal += ', '
            listezonegen2cristal += self.zonegen2cristal[i]
            
        if self.evolution != False:
            for i in range(len(self.evolution)):
                if i > 0:
                    listeevolution += ', '
                listeevolution += self.evolution[i]
                
        if generation == 2:
            if self.evolution2 != False:
                for i in range(len(self.evolution2)):
                    if i > 0:
                        listeevolution += ', '
                    listeevolution += self.evolution2[i]
                
                
        
        print('Informations sur',self.nom+':')
        print()
        print('  Num√©ro:',self.num)
        
        if self.type2 != False:
            print('  Types:',self.type1,'et',self.type2)
        else:
            print('  Type:',self.type1)
            
        
        #EVOLUTIONS
        
        
        if generation == 1:
            
            if self.evolution == False:
                print('  Aucune √©volution')
            else:
                if len(self.evolution) == 1:
                    print('  √âvolution:',listeevolution)
                else:
                    print('  √âvolutions:',listeevolution)
            if self.pre_evolution != False:
                print('  Pr√©-√©volution:',self.pre_evolution)
                
        else: 
            
            #G√©n√©ration 2
            
            if self.evolution != False: #poss√®de une √©volution de gen 1
                if self.evolution2 != False: #poss√®de une √©volution de gen 2
                    print('  √âvolutions:',listeevolution)
                else:
                    print('  √âvolution:',listeevolution)
            else:						#aucune √©volution de gen 1
                if self.evolution2 != False:
                    print('  √âvolution:',listeevolution)
            if self.evolution == False and self.evolution2 == False:
                print('  Aucune √©volution')
            if self.pre_evolution != False:
                print('  Pr√©-√©volution:',self.pre_evolution)
            elif self.pre_evolution2 != False:
                print('  Pr√©-√©volution:',self.pre_evolution2)
                
            
        #CONDITIONS ET NIVEAU EVOLUTION
                
                #gen 1
        print()      
        if generation == 1:
            if self.condition_evolution != False:
                if len(self.condition_evolution) == 1:
                    print("  Condition d'√©volution:",self.condition_evolution)
                else:
                    for i in range(len(self.condition_evolution)):
                        print("  Condition d'√©volution en",self.evolution[i]+':',self.condition_evolution[i])
                
            elif self.niveau_evolution != False:
                if len(self.evolution) == 1:
                    print("  Niveau d'√©volution en",listeevolution+':',self.niveau_evolution)
                else:
                    for i in range(len(self.evolution)):
                        print("  Niveau d'√©volution en",self.evolution[i]+':',self.niveau_evolution[i])
                        
            
                #gen 2
                
        if generation == 2:
            if self.condition_evolution != False:
                if len(self.condition_evolution) == 1:
                    print("  Condition d'√©volution:",self.condition_evolution)
                else:
                    for i in range(len(self.condition_evolution)):
                        print("  Condition d'√©volution en",self.evolution[i]+':',self.condition_evolution[i])
                
            elif self.niveau_evolution != False:
                if len(self.evolution) == 1:
                    print("  Niveau d'√©volution en",listeevolution+':',self.niveau_evolution)
                else:
                    for i in range(len(self.evolution)):
                        print("  Niveau d'√©volution en",self.evolution[i]+':',self.niveau_evolution[i])
            
            
            
            if self.condition_evolution2 != False:
                if len(self.condition_evolution2) == 1:
                        print("  Condition d'√©volution:",self.condition_evolution2)
                else:
                    for i in range(len(self.condition_evolution2)):
                        print("  Condition d'√©volution en",self.evolution2[i]+':',self.condition_evolution2[i])
                    
            elif self.niveau_evolution2 != False:
                if len(self.evolution2) == 1:
                    print("  Niveau d'√©volution en",listeevolution+':',self.niveau_evolution)
                else:
                    for i in range(len(self.evolution2)):
                        print("  Niveau d'√©volution en",self.evolution2[i]+':',self.niveau_evolution[i])
                
                
        if generation == 1:
            if self.zonegen1rouge == []:
                if self.pre_evolution != False:
                    print()
                    print('  Obtenable uniquement en faisaint √©voluer',self.pre_evolution)
                    print()
                else:
                    print()
                    print('  Introuvable naturelement')
                    print()
            else:
                if self.zonegen1rouge == self.zonegen1bleu == self.zonegen1jaune:
                    print()
                    print('  Localisation Pok√©mon Rouge, Bleu et Jaune:',listezonegen1rouge)
                    print()
                elif self.zonegen1rouge == self.zonegen1bleu:
                    print()
                    print('  Localistaion Pok√©mon Rouge et Bleu:',listezonegen1rouge)
                    print('  Localistaion Pok√©mon Jaune:',listezonegen1jaune)
                    print()
                else:
                    print()
                    print('  Localistaion Pok√©mon Rouge:',listezonegen1rouge)
                    print('  Localistaion Pok√©mon Bleu:',listezonegen1bleu)
                    print('  Localistaion Pok√©mon Jaune:',listezonegen1jaune)
                    print()
                
        if generation == 2:
            
            if self.zonegen2or == []:
                
                if self.pre_evolution != False:
                    
                    print()
                    print('  Obtenable uniquement en faisaint √©voluer',self.pre_evolution,'ou via un √©change avec un jeu de premi√®re g√©n√©ration')
                    print()
                else:
                    print()
                    print('  Introuvable naturelement, uniquement obtenable via un √©change avec un jeu de premi√®re g√©n√©ration')
                    print()
            else:
                if self.zonegen2or == self.zonegen2argent == self.zonegen2cristal:
                    print()
                    print('  Localisation Pok√©mon Or, Argent et Cristal:',listezonegen2or)
                    print()
                elif self.zonegen2or == self.zonegen2argent:
                    print()
                    print('  Localistaion Pok√©mon Or et Argent:',listezonegen2or)
                    print('  Localistaion Pok√©mon Cristal:',listezonegen2cristal)
                    print()
                else:
                    print()
                    print('  Localistaion Pok√©mon Or:',listezonegen2or)
                    print('  Localistaion Pok√©mon Argent',listezonegen2argent)
                    print('  Localistaion Pok√©mon Cristal:',listezonegen2cristal)
                    print()
                
        
        if self.male == 100:
            print('  Genre: Uniquement des m√¢les')
        elif self.femelle == 100:
            print('  Genre: Uniquement des femelles')
        elif self.male == 0 and self.femelle == 0:
            print('  Assexu√©')
        else:
            print('  Genre:',str(self.male)+'% de m√¢les',str(self.femelle)+'% de femelles')
        print('  Taux de capture:',self.taux_capture)
        print("  Nombre de pas pour l'√©closion d'un oeuf de",self.nom+':',self.pasoeuf)
        print()
        
        
    def statistiques(self):
        print('Statistiques de',self.nom+':')
        print()
        print('  PV:     ',self.pv)
        print('  Force:  ',self.force)
        print('  D√©fense:',self.defense)
        print('  Vitesse:',self.vitesse)
        if generation == 1:
            print('  Sp√©cial:',self.specialgen1)
            print()
            print('Total:')
            print('  ',(self.pv+self.force+self.defense+self.vitesse+self.specialgen1))
        else:
            print('  D√©fense sp√©ciale:',self.defensespeciale)
            print('  Attaque sp√©ciale:',self.attaquespeciale)
            print()
            print('Total:')
            print('  ',(self.pv+self.force+self.defense+self.vitesse+self.defensespeciale+self.attaquespeciale))
            
    def compare_stats(self,self2):
        print('Comapraison de statistiques:')
        print()
        
            #PV
        
        if self.pv > self2.pv:
            print('  PV:',self.nom,'√† des meilleures stats de PV (',self.pv,'contre',self2.pv,'soit',(self.pv-self2.pv),'de difference )')
        elif self.pv < self2.pv:
            print('  PV:',self2.nom,'√† des meilleures stats de PV (',self2.pv,'contre',self.pv,'soit',(self2.pv-self.pv),'de difference )')
        elif self.pv == self2.pv:
            print('  PV: √âgalit√© de PV entre',self.nom,'et',self2.nom,'(',self.pv,')')
            
            #FORCE
            
        if self.force > self2.force:
            print('  Force:',self.nom,'√† des meilleures stats de Force (',self.force,'contre',self2.force,'soit',(self.force-self2.force),'de difference )')
        elif self.force < self2.force:
            print('  Force:',self2.nom,'√† des meilleures stats de Force (',self2.force,'contre',self.force,'soit',(self2.force-self.force),'de difference )')
        elif self.force == self2.force:
            print('  Force: √âgalit√© de Force entre',self.nom,'et',self2.nom,'(',self.force,')')
            
            #DEFENSE
            
        if self.defense > self2.defense:
            print('  D√©fense:',self.nom,'√† des meilleures stats de D√©fense (',self.defense,'contre',self2.defense,'soit',(self.defense-self2.defense),'de difference )')
        elif self.defense < self2.defense:
            print('  D√©fense:',self2.nom,'√† des meilleures stats de D√©fense (',self2.defense,'contre',self.defense,'soit',(self2.defense-self.defense),'de difference )')
        elif self.defense == self2.defense:
            print('  D√©fense: √âgalit√© de D√©fense entre',self.nom,'et',self2.nom,'(',self.defense,')')
            
            #VITESSE
            
        if self.vitesse > self2.vitesse:
            print('  Vitesse:',self.nom,'√† une meilleure Vitesse (',self.vitesse,'contre',self2.vitesse,'soit',(self.vitesse-self2.vitesse),'de difference )')
        elif self.vitesse < self2.vitesse:
            print('  Vitesse:',self2.nom,'√† une meilleure Vitesse (',self2.vitesse,'contre',self.vitesse,'soit',(self2.vitesse-self.vitesse),'de difference )')
        elif self.vitesse == self2.vitesse:
            print('  Vitesse: √âgalit√© de Vitesse entre',self.nom,'et',self2.nom,'(',self.vitesse,')')
                    
            #GENERATION
            
        if generation == 1:
            
            if self.specialgen1 > self2.specialgen1:
                print('  Sp√©cial:',self.nom,'√† une meilleure statistique sp√©ciale (',self.specialgen1,'contre',self2.specialgen1,'soit',(self.specialgen1-self2.specialgen1),'de difference )')
            elif self.specialgen1 < self2.specialgen1:
                print('  Sp√©cial:',self2.nom,'√† une meilleure statistique sp√©ciale (',self2.specialgen1,'contre',self.specialgen1,'soit',(self2.specialgen1-self.specialgen1),'de difference )')
            elif self.specialgen1 == self2.specialgen1:
                print('  Sp√©cial: √âgalit√© de statistique sp√©ciale entre',self.nom,'et',self2.nom,'(',self.specialgen1,')')
            total1=self.pv+self.force+self.defense+self.vitesse+self.specialgen1
            total2=self2.pv+self2.force+self2.defense+self2.vitesse+self2.specialgen1
        
        
        
        else:
            
            if self.attaquespeciale > self2.attaquespeciale:
                print('  Attaque Sp√©ciale:',self.nom,"√† une meilleure statistique d'Attaque Sp√©ciale (",self.attaquespeciale,'contre',self2.attaquespeciale,'soit',(self.attaquespeciale-self2.attaquespeciale),'de difference )')
            elif self.attaquespeciale < self2.attaquespeciale:
                print('  Attaque Sp√©ciale:',self2.nom,"√† une meilleure statistique d'Attaque Sp√©ciale (",self2.attaquespeciale,'contre',self.attaquespeciale,'soit',(self2.attaquespeciale-self.attaquespeciale),'de difference )')
            elif self.attaquespeciale == self2.attaquespeciale:
                print("  Attaque Sp√©ciale: √âgalit√© de statistique d'Attaque Sp√©ciale entre",self.nom,'et',self2.nom,'(',self.attaquespeciale,')')
            
            if self.defensespeciale > self2.defensespeciale:
                print('  D√©fense Sp√©ciale:',self.nom,'√† une meilleure statistique de D√©fense Sp√©ciale (',self.defensespeciale,'contre',self2.defensespeciale,'soit',(self.defensespeciale-self2.defensespeciale),'de difference )')
            elif self.defensespeciale < self2.defensespeciale:
                print('  D√©fense Sp√©ciale:',self2.nom,'√† une meilleure statistique de D√©fense Sp√©ciale (',self2.defensespeciale,'contre',self.defensespeciale,'soit',(self2.defensespeciale-self.defensespeciale),'de difference )')
            elif self.defensespeciale == self2.defensespeciale:
                print('  D√©fense Sp√©ciale: √âgalit√© de D√©fense Sp√©ciale entre',self.nom,'et',self2.nom,'(',self.defensespeciale,')')
            total1=self.pv+self.force+self.defense+self.vitesse+self.attaquespeciale+self.defensespeciale
            total2=self2.pv+self2.force+self2.defense+self2.vitesse+self.attaquespeciale+self.defensespeciale
            
        #TOTAL
            
        print()
        print('Total:')
        print()
        if total1 > total2:
            print('  Total:',self.nom,'√† un meilleur Total de statistiques (',total1,'contre',total2,'soit',(total1-total2),'de difference )')
        elif total1 < total2:
            print('  Total:',self2.nom,'√† un meilleur Total de statistiques (',total2,'contre',total1,'soit',(total2-total1),'de difference )')
        elif total1 == total2:
            print('  Total: √âgalit√© de Total entre',self.nom,'et',self2.nom,'(',total1,')')
            
            
    
def info(pkmn):
    if generation==1:
        if pkmn.num > 151:
            print(pkmn.nom,"n'est apparu qu'en deuxi√®me g√©n√©ration, veuillez choisir la deuxi√®me g√©n√©ration afin d'obtenir des informations sur ce Pok√©mon")
        else:
            Pokemon.info(pkmn)
    else:
        Pokemon.info(pkmn)

def stats(pkmn):
    if generation == 1:
        if pkmn.num < 151:
            Pokemon.statistiques(pkmn)
        else:
            print('Du au changements de statistiques de la deuxi√®me g√©n√©ration, on ne peux pas voir les statistiques de',pkmn.nom,'en premi√®re g√©n√©ration')
            print()
            print("  En effet, depuis la deuxi√®me g√©n√©ration, la statistique sp√©ciale s'est divis√©e en deux statistiques: attaque sp√©ciale et d√©fense sp√©ciale")
            print("  Pour afficher les statistiques de",pkmn.nom,'veuillez choisir la deuxi√®me g√©n√©ration avec gen()')
    else:
        Pokemon.statistiques(pkmn)
    
def compare_stats(pkmn1,pkmn2):
    if generation == 1:
        if pkmn1.num < 151 and pkmn2.num < 151:
            Pokemon.compare_stats(pkmn1,pkmn2)
        else:
            print('Du au changements de statistiques de la deuxi√®me g√©n√©ration, on ne peux pas comparer ces statistiques')
            print()
            print("  En effet, depuis la deuxi√®me g√©n√©ration, la statistique sp√©ciale s'est divis√©e en deux statistiques: attaque sp√©ciale et d√©fense sp√©ciale")
            print("  Il est par exemple impossible de comparer les statistiques de Mewtwo en premi√®re g√©n√©ration et celles de Ho-Oh (qui poss√®de forc√©ment le sch√©ma statistique de la deuxi√®me g√©n√©ration)")
            print()
            print("  Pour comparer les statistiques de",pkmn1.nom,"et",pkmn2.nom,'veuillez choisir la deuxi√®me g√©n√©ration avec gen()')
    else:
        Pokemon.compare_stats(pkmn1,pkmn2)
    
def aide():
    print()
    print('gen() -----------------------------------> Choisir la g√©n√©ration (1 ou 2)')
    print('info(pok√©mon) ---------------------------> Obtenir des informations sur le Pok√©mon Choisi')
    print('stats(pok√©mon) --------------------------> Obtenir les statistiques du Pok√©mon choisi')
    print('compare_stats(pok√©mon1,pok√©mon2) --------> Comparer les statistiques de deux Pok√©mon')
    print('loc() -----------------------------------> Voir tout les Pok√©mons pr√©sents √† une localisation pr√©cise')
    print()
    
    
def loc():
    localisation = input('Quelle localisation? ')
    print()
    if generation == 1:
        print('Pok√©mon Bleu:')
        print()
        for i in range(len(listepokemon)):
            for i2 in range(len(listepokemon[i].zonegen1bleu)):
                if listepokemon[i].zonegen1bleu[i2] == localisation:
                    print(listepokemon[i].nom)
        print()
        print('Pok√©mon Rouge:')
        print()
        for i in range(len(listepokemon)):
            for i2 in range(len(listepokemon[i].zonegen1rouge)):
                if listepokemon[i].zonegen1rouge[i2] == localisation:
                    print(listepokemon[i].nom)
        print()
        print('Pok√©mon Jaune:')
        print()
        for i in range(len(listepokemon)):
            for i2 in range(len(listepokemon[i].zonegen1jaune)):
                if listepokemon[i].zonegen1jaune[i2] == localisation:
                    print(listepokemon[i].nom)
    else:
        print('Pok√©mon Or:')
        print()

        for i in range(len(listepokemon)):
            for i2 in range(len(listepokemon[i].zonegen2or)):
                if listepokemon[i].zonegen2or[i2] == localisation:
                    print(listepokemon[i].nom)
        print()
        print('Pok√©mon Argent:')
        print()
        for i3 in range(len(listepokemon[i].zonegen2argent)):
            if listepokemon[i].zonegen2argent[i3] == localisation:
                print(listepokemon[i].nom)
        print()
        print('Pok√©mon Cristal:')
        print()
        for i3 in range(len(listepokemon[i].zonegen2cristal)):
            if listepokemon[i].zonegen2cristal[i3] == localisation:
                print(listepokemon[i].nom)
        
def get_nom(num):
    for i in range(len(listepokemon)):
        if listepokemon[i].num == num:
            return listepokemon[i].nom
def get_num(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            return listepokemon[i].num

def get_types(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            if listepokemon[i].type2==False:
                return ('Type: '+listepokemon[i].type1)
            else:
                return ('Types: '+listepokemon[i].type1+' et '+listepokemon[i].type2)
    
def get_pv(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            return listepokemon[i].pv
        
def get_force(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            return listepokemon[i].force
        
def get_defense(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            return listepokemon[i].defense
        
def get_vitesse(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            return listepokemon[i].vitesse
        
def get_specialgen1(nom):
    for i in range(len(listepokemon)):
        if listepokemon[i].nom == nom:
            return listepokemon[i].specialgen1



class Attaque:
    def __init__(self,nom,typeattaque,statutattaque,puissance,precision,ppmin,ppmax,tauxcritique,priorite,attaquedirecte,effethorscombat,effetsecondaires):
        self.nom=nom
        self.typeattaque=typeattaque
        self.statutattaque=statutattaque
        self.puissance=puissance
        self.precision=precision
        self.ppmin=ppmin
        self.ppmax=ppmax
        self.tauxcritique=tauxcritique
        self.priorite=priorite
        self.attaquedirecte=attaquedirecte
        self.effethorscombat=effethorscombat
        self.effetsecondaires=effetsecondaires
        
#listage des pok√©mons
    
listepokemon=[]

listepokemon.append(Pokemon(1,'bulbizarre','Bulbizarre',45,49,49,45,65,65,65,False,['Herbizarre'],False,False,16,False,False,False,['Offert par le professeur Chen en d√©but de jeu'],['Offert par le professeur Chen en d√©but de jeu'],['Offert par une fille √† Azuria'],[],[],[],'Plante','Poison',5100,87,13,45,['Feu','Glace','Psy','Vol'],False,['Combat','Eau','√âlectrique'],['Plante'],False))
bulbizarre=Pokemon(1,'bulbizarre','Bulbizarre',45,49,49,45,65,65,65,False,['Herbizarre'],False,False,16,False,False,False,['Offert par le professeur Chen en d√©but de jeu'],['Offert par le professeur Chen en d√©but de jeu'],['Offert par une fille √† Azuria'],[],[],[],'Plante','Poison',5100,87,13,45,['Feu','Glace','Psy','Vol'],False,['Combat','Eau','√âlectrique'],['Plante'],False)
listepokemon.append(Pokemon(2,'herbizarre','Herbizarre',60,62,63,60,80,80,80,'Bulbizarre',['Florizarre'],False,False,32,False,False,False,[],[],[],[],[],[],'Plante','Poison',5100,87,13,45,['Feu','Glace','Psy','Vol'],False,['Combat','Eau','√âlectrique'],['Plante'],False))
herbizarre=Pokemon(2,'herbizarre','Herbizarre',60,62,63,60,80,80,80,'Bulbizarre',['Florizarre'],False,False,32,False,False,False,[],[],[],[],[],[],'Plante','Poison',5100,87,13,45,['Feu','Glace','Psy','Vol'],False,['Combat','Eau','√âlectrique'],['Plante'],False)
listepokemon.append(Pokemon(3,'florizarre','Florizarre',80,82,83,80,100,100,100,['Herbizarre'],False,False,False,False,False,False,False,[],[],[],[],[],[],'Plante','Poison',5100,87,13,45,['Feu','Glace','Psy','Vol'],False,['Combat','Eau','√âlectrique'],['Plante'],False))
florizarre=Pokemon(3,'florizarre','Florizarre',80,82,83,80,100,100,100,'Herbizarre',False,False,False,False,False,False,False,[],[],[],[],[],[],'Plante','Poison',5100,87,13,45,['Feu','Glace','Psy','Vol'],False,['Combat','Eau','√âlectrique'],['Plante'],False)


listepokemon.append(Pokemon(4,'salameche','Salam√®che',39,52,43,65,50,60,50,False,['Reptincel'],False,False,16,False,False,False,['Offert par le professeur Chen en d√©but de jeu'],['Offert par le professeur Chen en d√©but de jeu'],['Offert par Damian √† la Route 24'],[],[],[],'Feu',False,5100,87,13,45,['Eau','Roche','Sol'],False,['Acier','Feu','Glace','Insecte','Plante'],False,False))
salameche=Pokemon(4,'salameche','Salam√®che',39,52,43,65,50,60,50,False,['Reptincel'],False,False,16,False,False,False,['Offert par le professeur Chen en d√©but de jeu'],['Offert par le professeur Chen en d√©but de jeu'],['Offert par Damian √† la Route 24'],[],[],[],'Feu',False,5100,87,13,45,['Eau','Roche','Sol'],False,['Acier','Feu','Glace','Insecte','Plante'],False,False)
listepokemon.append(Pokemon(5,'reptincel','Reptincel',58,64,58,80,80,80,65,'Salam√®che',['Dracaufeu'],False,False,36,False,False,False,[],[],[],[],[],[],'Feu',False,5100,87,13,45,['Eau','Roche','Sol'],False,['Acier','Feu','Glace','Insecte','Plante'],False,False))
reptincel=Pokemon(5,'reptincel','Reptincel',58,64,58,80,80,80,65,'Salam√®che',['Dracaufeu'],False,False,36,False,False,False,[],[],[],[],[],[],'Feu',False,5100,87,13,45,['Eau','Roche','Sol'],False,['Acier','Feu','Glace','Insecte','Plante'],False,False)
listepokemon.append(Pokemon(6,'dracaufeu','Dracaufeu',78,84,78,100,85,80,65,'Reptincel',False,False,False,False,False,False,False,[],[],[],[],[],[],'Feu','Vol',5100,87,13,45,['Eau','√âlectrique'],['Roche'],['Acier','Combat','Feu'],['Insecte','Plante'],['Sol']))
dracaufeu=Pokemon(6,'dracaufeu','Dracaufeu',78,84,78,100,85,80,65,'Reptincel',False,False,False,False,False,False,False,[],[],[],[],[],[],'Feu','Vol',5100,87,13,45,['Eau','√âlectrique'],['Roche'],['Acier','Combat','Feu'],['Insecte','Plante'],['Sol'])


listepokemon.append(Pokemon(7,'carapuce','Carapuce',44,48,65,43,50,50,65,False,['Carabaffe'],False,False,16,False,False,False,['Offert par le professeur Chen en d√©but de jeu'],['Offert par le professeur Chen en d√©but de jeu'],["Offert par l'agent Jenny √† Carmin sur Mer"],[],[],[],'Eau',False,5100,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False))
carapuce=Pokemon(7,'carapuce','Carapuce',44,48,65,43,50,50,65,False,['Carabaffe'],False,False,16,False,False,False,['Offert par le professeur Chen en d√©but de jeu'],['Offert par le professeur Chen en d√©but de jeu'],["Offert par l'agent Jenny √† Carmin sur Mer"],[],[],[],'Eau',False,5100,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False)
listepokemon.append(Pokemon(8,'carabaffe','Carabaffe',59,63,80,58,65,65,80,'Carapuce',['Tortank'],False,False,36,False,False,False,[],[],[],[],[],[],'Eau',False,5400,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False))
carabaffe=Pokemon(8,'carabaffe','Carabaffe',59,63,80,58,65,65,80,'Carapuce',['Tortank'],False,False,36,False,False,False,[],[],[],[],[],[],'Eau',False,5400,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False)
listepokemon.append(Pokemon(9,'tortank','Tortank',79,83,100,78,85,105,85,'Carabaffe',False,False,False,False,False,False,False,[],[],[],[],[],[],'Eau',False,5400,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False))
tortank=Pokemon(9,'tortank','Tortank',79,83,100,78,85,105,85,'Carabaffe',False,False,False,False,False,False,False,[],[],[],[],[],[],'Eau',False,5400,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False)


listepokemon.append(Pokemon(10,'chenipan','Chenipan',45,30,35,45,20,20,20,False,['Chrysacier'],False,False,7,False,False,False,['For√™t de Jade','Route 25'],['For√™t de Jade','Route 2','Route 24','Route 25'],[],["Parc Naturel (Concours de capture d'insectes)",'Parc Naturel (matin et jour)','Bois aux Ch√™nes','Route 2','Route 30','Route 34',"Coup d'Boule dans les arbres"],["Parc Naturel (Concours de capture d'insectes)"],["Parc Naturel (Concours de capture d'insectes)",'Parc Naturel (matin et jour)','Bois aux Ch√™nes','Route 2','Route 24','Route 25','Route 30','Route 31',"Coup d'Boule dans les arbres (Bois aux Ch√™nes)"],'Insecte',False,3825,50,50,255,['Feu','Roche','Vol'],False,['Combat','Plante','Sol'],False,False))
chenipan=Pokemon(10,'chenipan','Chenipan',45,30,35,45,20,20,20,False,'Chrysacier',False,False,7,False,False,False,['For√™t de Jade','Route 25'],['For√™t de Jade','Route 2','Route 24','Route 25'],[],["Parc Naturel (Concours de capture d'insectes)",'Parc Naturel (matin et jour)','Bois aux Ch√™nes','Route 2','Route 30','Route 34',"Coup d'Boule dans les arbres"],["Parc Naturel (Concours de capture d'insectes)"],["Parc Naturel (Concours de capture d'insectes)",'Parc Naturel (matin et jour)','Bois aux Ch√™nes','Route 2','Route 24','Route 25','Route 30','Route 31',"Coup d'Boule dans les arbres (Bois aux Ch√™nes)"],'Insecte',False,3825,50,50,255,['Feu','Roche','Vol'],False,['Combat','Plante','Sol'],False,False)
listepokemon.append(Pokemon(11,'chrysacier','Chrysacier',50,20,55,30,25,25,25,'Chenipan',['Papillusion'],False,False,10,False,False,False,['For√™t de Jade','Route 25'],['For√™t de Jade','Route 24','Route 25'],['For√™t de Jade'],["Parc Naturel (Concours de captures d'insectes)",'Bois aux Ch√™nes','Route 2','Route 30','Route 31',"Coup d'Boule dans les arbres"],["Parc Naturel (Concours de captures d'insectes)"],["Parc Naturel (Concours de captures d'insectes)",'Bois aux ch√™nes','Route 24','Route 25',"Coup d'Boule dans les arbres (Bois aux Ch√™nes)"],'Insecte',False,3825,50,50,120,['Feu','Roche','Vol'],False,['Combat','Plante','Sol'],False,False))
chrysacier=Pokemon(11,'chrysacier','Chrysacier',50,20,55,30,25,25,25,'Chenipan',['Papillusion'],False,False,10,False,False,False,['For√™t de Jade','Route 25'],['For√™t de Jade','Route 24','Route 25'],['For√™t de Jade'],["Parc Naturel (Concours de captures d'insectes)",'Bois aux Ch√™nes','Route 2','Route 30','Route 31',"Coup d'Boule dans les arbres"],["Parc Naturel (Concours de captures d'insectes)"],["Parc Naturel (Concours de captures d'insectes)",'Bois aux ch√™nes','Route 24','Route 25',"Coup d'Boule dans les arbres (Bois aux Ch√™nes)"],'Insecte',False,3825,50,50,120,['Feu','Roche','Vol'],False,['Combat','Plante','Sol'],False,False)
listepokemon.append(Pokemon(12,'papillusion','Papillusion',60,45,50,75,80,90,80,'Chrysacier',False,False,False,False,False,False,False,[],[],[],["Parc Naturel (Concours de captures d'insectes)",'Route 2 (matin)',"Coup d'Boule dans les arbres (Bois aux C√™nes, Lac Col√®re, Route 26, Route 27, Route 34, Route 35, Route 36, Route 37, Route 38, Route 39)"],["Parc Naturel (Concours de captures d'insectes)"],["Parc Naturel (Concours de captures d'insectes)",'Route 2','Route 24','Route 25',"Coup d'Boule dans les arbres (Bois aux Ch√™nes)"],'Insecte','Vol',3825,50,50,45,['√âlectrique','Feu','Glace','Vol'],['Roche'],['Insecte'],['Combat','Plante'],['Sol']))
papillusion=Pokemon(12,'papillusion','Papillusion',60,45,50,75,80,90,80,'Chrysacier',False,False,False,False,False,False,False,[],[],[],["Parc Naturel (Concours de captures d'insectes)",'Route 2 (matin)',"Coup d'Boule dans les arbres (Bois aux C√™nes, Lac Col√®re, Route 26, Route 27, Route 34, Route 35, Route 36, Route 37, Route 38, Route 39)"],["Parc Naturel (Concours de captures d'insectes)"],["Parc Naturel (Concours de captures d'insectes)",'Route 2','Route 24','Route 25',"Coup d'Boule dans les arbres (Bois aux Ch√™nes)"],'Insecte','Vol',3825,50,50,45,['√âlectrique','Feu','Glace','Vol'],['Roche'],['Insecte'],['Combat','Plante'],['Sol'])


listepokemon.append(Pokemon(13,'aspicot','Aspicot',40,35,30,50,20,20,20,False,['Coconfort'],False,False,7,False,False,False,['For√™t de Jade','Route 2','Route 24','Route 25'],['For√™t de Jade','Route 25'],['Obtention par √©change'],["Parc naturel (Concours de capture d'insectes)"],['Bois aux Ch√™nes','Parc naturel',"Parc naturel (Concours de capture d'insectes)","Coup d'Boule sur abustres",'Route 2','Route 30','Route 31'],['Bois aux Ch√™nes','Parc naturel',"Coup d'Boule sur arbustres (Bois aux ch√™nes)","Parc naturel (Concours de capture d'insectes)",'Route 30','Route 31'],'Insecte','Poison',3825,50,50,255,['Feu','Psy','Roche','Vol'],False,['Insecte','Poison'],['Combat','Plante'],False))
aspicot=Pokemon(13,'aspicot','Aspicot',40,35,30,50,20,20,20,False,['Coconfort'],False,False,7,False,False,False,['For√™t de Jade','Route 2','Route 24','Route 25'],['For√™t de Jade','Route 25'],['Obtention par √©change'],["Parc naturel (Concours de capture d'insectes)"],['Bois aux Ch√™nes','Parc naturel',"Parc naturel (Concours de capture d'insectes)","Coup d'Boule sur abustres",'Route 2','Route 30','Route 31'],['Bois aux Ch√™nes','Parc naturel',"Coup d'Boule sur arbustres (Bois aux ch√™nes)","Parc naturel (Concours de capture d'insectes)",'Route 30','Route 31'],'Insecte','Poison',3825,50,50,255,['Feu','Psy','Roche','Vol'],False,['Insecte','Poison'],['Combat','Plante'],False)


listepokemon.append(Pokemon(133,'evoli','√âvoli',55,55,50,55,65,45,65,False,['Aquali','Voltali','Pyroli'],['Mentali','Noctali'],False,False,False,['Utiliser une Pierre Eau','Utiliser une Pierre Foudre','Utiliser une Pierre Feu'],['Prendre un niveau avec le bonheur suffisamment √©lev√©, pendant la journ√©e','Prendre un niveau avec le bonheur suffisamment √©lev√©, pendant la nuit'],['Manoir C√©ladon (unique)'],['Manoir C√©ladon (unique)'],['Manoir C√©ladon (unique)'],['Casino de C√©ladopole','Offert par L√©o √† Doublonville (unique)'],['Casino de C√©ladopole','Offert par L√©o √† Doublonville (unique)'],[],'Normal',False,8670,87,13,45,['Combat'],False,False,False,['Spectre']))
evoli=Pokemon(133,'evoli','√âvoli',55,55,50,55,65,45,65,False,['Aquali','Voltali','Pyroli'],['Mentali','Noctali'],False,False,False,['Utiliser une Pierre Eau','Utiliser une Pierre Foudre','Utiliser une Pierre Feu'],['Prendre un niveau avec le bonheur suffisamment √©lev√©, pendant la journ√©e','Prendre un niveau avec le bonheur suffisamment √©lev√©, pendant la nuit'],['Manoir C√©ladon (unique)'],['Manoir C√©ladon (unique)'],['Manoir C√©ladon (unique)'],['Casino de C√©ladopole','Offert par L√©o √† Doublonville (unique)'],['Casino de C√©ladopole','Offert par L√©o √† Doublonville (unique)'],[],'Normal',False,8670,87,13,45,['Combat'],False,False,False,['Spectre'])
listepokemon.append(Pokemon(134,'aquali','Aquali',130,65,60,65,110,110,95,'√âvoli',False,False,False,False,False,False,False,[],[],[],[],[],[],'Eau',False,8670,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False))
aquali=Pokemon(134,'aquali','Aquali',130,65,60,65,110,110,95,'√âvoli',False,False,False,False,False,False,False,[],[],[],[],[],[],'Eau',False,8670,87,13,45,['√âlectrique','Plante'],False,['Acier','Eau','Feu','Glace'],False,False)


listepokemon.append(Pokemon(149,'dracolosse','Dracolosse',91,134,95,80,100,100,100,'Draco',False,False,False,False,False,False,False,[],[],[],[],[],[],'Dragon','Vol',9945,50,50,45,['Dragon','Roche'],['Glace'],['Combat','Feu','Eau','Insecte'],['Plante'],['Sol']))
dracolosse=Pokemon(149,'dracolosse','Dracolosse',91,134,95,80,100,100,100,'Draco',False,False,False,False,False,False,False,[],[],[],[],[],[],'Dragon','Vol',9945,50,50,45,['Dragon','Roche'],['Glace'],['Combat','Feu','Eau','Insecte'],['Plante'],['Sol'])


listepokemon.append(Pokemon(150,'mewtwo','Mewtwo',106,110,90,130,154,154,90,False,False,False,False,False,False,False,False,['Grotte Inconnue'],['Grotte Inconnue'],['Grotte Inconnue'],[],[],[],'Psy',False,30345,0,0,3,['Insecte','Spectre','T√©n√®bres'],False,['Combat','Psy'],False,False))
mewtwo=Pokemon(150,'mewtwo','Mewtwo',106,110,90,130,154,154,90,False,False,False,False,False,False,False,False,['Grotte Inconnue'],['Grotte Inconnue'],['Grotte Inconnue'],[],[],[],'Psy',False,30345,0,0,3,['Insecte','Spectre','T√©n√®bres'],False,['Combat','Psy'],False,False)

listenompokemon=['Bulbizarre','Herbizarre','Florizarre','Salam√®che','Reptincel','Dracaufeu','Carapuce','Carabaffe','Tortank','Chenipan','Chrysacier','Papillusion','Aspicot','Coconfort','Dardagnan','Pt√©ra','Magicarpe','L√©viator','√âvoli','Aquali','Voltali','Pyroli','Kabuto','Kabutops','Artikodin','√âlecthor','Sulfura','Mewtwo','Lugia','Ho-Oh']
listeversion=['Or','Argent']

print('Pok√©dex valable pour la premi√®re et la deuxi√®me g√©n√©ration (Pok√©mon Rouge, Bleu, Jaune, Or, Argent, et Cristal')
print('tapez aide() pour obtenir la liste des commandes')
print('Version 0.08')
print(listenompokemon)
print(len(listenompokemon))
print(len(listepokemon))